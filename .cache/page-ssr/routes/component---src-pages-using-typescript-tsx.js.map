{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;;AAQA,MAAMI,eAA+C,GAAG,CAAC;EACvDC,IADuD;EAEvDC,IAFuD;EAGvDC;AAHuD,CAAD,kBAKtDP,gDAAAA,CAACE,0DAAD;EAAQM,KAAK,EAAC,kBAAd;EAAiCD,QAAQ,EAAEA;AAA3C,gBACEP,gDAAAA,sDADF,eAEEA,gDAAAA,sEAC2CA,gDAAAA,wBAD3C,+EAE8CA,gDAAAA,2BAF9C,yEAFF,eAOEA,gDAAAA,sEAC2CA,gDAAAA,0BAD3C,oCAEMA,gDAAAA,0BAFN,gCAEsCA,gDAAAA,wBAFtC,WAPF,eAWEA,gDAAAA,+CACiCM,IADjC,2BAC2D,GAD3D,EAEGD,IAAI,CAACI,IAALJ,CAAUK,SAFb,MAXF,eAeEV,gDAAAA,+CACkC,GADlC,eAEEA,gDAAAA;EAAGW,IAAI,EAAC;AAAR,oCAFF,MAfF,eAsBEX,gDAAAA,CAACC,wCAAD;EAAMW,EAAE,EAAC;AAAT,6BAtBF,CALF;;AA+BO,MAAMC,IAAuB,GAAG,mBAAMb,gDAAAA,CAACG,uDAAD;EAAKK,KAAK,EAAC;AAAX,EAAtC;AAEP,iEAAeJ,eAAf;AAEO,MAAMU,KAAK,eAAX;;;;;;;;;;;;;;;;;AChDP;AACA;;AAEA,MAAMZ,MAAM,GAAG,CAAC;EAAEK,QAAF;EAAYC,KAAZ;EAAmBO;AAAnB,CAAD,KAAmC;EAChD,MAAMC,QAAQ,GAAI,GAAEC,EAAgB,GAApC;EACA,MAAMC,UAAU,GAAGX,QAAQ,CAACY,QAAT,KAAsBH,QAAzC;EACA,IAAII,MAAJ;;EAEA,IAAIF,UAAJ,EAAgB;IACdE,MAAM,gBACJ;MAAI,SAAS,EAAC;IAAd,gBACE,iDAAC,wCAAD;MAAM,EAAE,EAAC;IAAT,GAAcZ,KAAd,CADF,CADF;EAKD,CAND,MAMO;IACLY,MAAM,gBACJ,iDAAC,wCAAD;MAAM,SAAS,EAAC,kBAAhB;MAAmC,EAAE,EAAC;IAAtC,GACGZ,KADH,CADF;EAKD;;EAED,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAgC,qBAAmBU;EAAnD,gBACE;IAAQ,SAAS,EAAC;EAAlB,GAAmCE,MAAnC,CADF,eAEE,+DAAOL,QAAP,CAFF,eAGE,0EACK,IAAIM,IAAJ,GAAWC,WAAX,EADL,kBAEI,GAFJ,eAGE;IAAG,IAAI,EAAC;EAAR,YAHF,CAHF,CADF;AAWD,CA9BD;;AAgCA,iEAAepB,MAAf;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,MAAMC,GAAG,GAAG,CAAC;EAAEqB,WAAF;EAAeC,IAAf;EAAqBjB,KAArB;EAA4BO;AAA5B,CAAD,KAA4C;EAAA;;EACtD,MAAM;IAAEN;EAAF,4EAAN;EAgBA,MAAMiB,eAAe,GAAGF,WAAW,IAAIf,IAAI,CAACkB,YAAL,CAAkBH,WAAzD;EACA,MAAMI,YAAY,yBAAGnB,IAAI,CAACkB,YAAR,uDAAG,mBAAmBnB,KAAxC;EAEA,oBACE,iHACE,gEAAQoB,YAAY,GAAI,GAAEpB,KAAM,MAAKoB,YAAa,EAA9B,GAAkCpB,KAAtD,CADF,eAEE;IAAM,IAAI,EAAC,aAAX;IAAyB,OAAO,EAAEkB;EAAlC,EAFF,eAGE;IAAM,QAAQ,EAAC,UAAf;IAA0B,OAAO,EAAElB;EAAnC,EAHF,eAIE;IAAM,QAAQ,EAAC,gBAAf;IAAgC,OAAO,EAAEkB;EAAzC,EAJF,eAKE;IAAM,QAAQ,EAAC,SAAf;IAAyB,OAAO,EAAC;EAAjC,EALF,eAME;IAAM,IAAI,EAAC,cAAX;IAA0B,OAAO,EAAC;EAAlC,EANF,eAOE;IACE,IAAI,EAAC,iBADP;IAEE,OAAO,EAAE,wBAAAjB,IAAI,CAACkB,YAAL,qGAAmBE,MAAnB,gFAA2BC,OAA3B,KAAuC;EAFlD,EAPF,eAWE;IAAM,IAAI,EAAC,eAAX;IAA2B,OAAO,EAAEtB;EAApC,EAXF,eAYE;IAAM,IAAI,EAAC,qBAAX;IAAiC,OAAO,EAAEkB;EAA1C,EAZF,EAaGX,QAbH,CADF;AAiBD,CArCD;;AAuCAZ,GAAG,CAAC4B,YAAJ,GAAmB;EACjBP,WAAW,EAAG;AADG,CAAnB;AAIArB,GAAG,CAAC6B,SAAJ,GAAgB;EACdR,WAAW,EAAED,0DADC;EAEdf,KAAK,EAAEe,qEAA2BW;AAFpB,CAAhB;AAKA,iEAAe/B,GAAf","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","title","site","buildTime","href","to","Head","query","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","PropTypes","description","lang","metaDescription","siteMetadata","defaultTitle","social","twitter","defaultProps","propTypes","string","isRequired"],"sourceRoot":""}